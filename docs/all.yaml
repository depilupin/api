openapi: 3.0.0
info:
  title: Pinto API
  version: 1.0.0
  description: REST API for getting information as to the current and historical state of Pinto and related protocols.
servers:
  - url: "https://api.pinto.money"

tags:
  - name: Exchange
  - name: Silo
  - name: Price
  - name: Snapshot (DEPRECATED)
  - name: Tractor

paths:
  /exchange/cg/tickers:
    get:
      tags:
        - Exchange
      summary: Retrieve tickers and 24h stats
      operationId: getCGTickers
      parameters:
        - $ref: "#/components/parameters/blockNumber"
        - $ref: "#/components/parameters/timestamp"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ticker_id:
                      type: string
                      description: Unique identifier for the ticker
                      example: "0xbea0000029ad1c77d3d5d23ba2d8893db9d1efab_0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                    base_currency:
                      type: string
                      description: Base currency identifier
                      example: "0xbea0000029ad1c77d3d5d23ba2d8893db9d1efab"
                    target_currency:
                      type: string
                      description: Target currency identifier
                      example: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                    pool_id:
                      type: string
                      description: Pool identifier
                      example: "0xbea0e11282e2bb5893bece110cf199501e872bad"
                    last_price:
                      type: number
                      format: float
                      description: Last recorded price in target currency
                      example: 0.000389236771196659
                    base_volume:
                      type: number
                      format: float
                      description: 24h volume of the base currency
                      example: 176336.03559
                    target_volume:
                      type: number
                      format: float
                      description: 24h volume of the target currency
                      example: 68.71107371221171
                    liquidity_in_usd:
                      type: integer
                      description: Liquidity in USD
                      example: 27491580
                    depth2:
                      type: object
                      description: Amount of tokens that can be bought or sold to move the price by 2% in either direction
                      properties:
                        buy:
                          type: array
                          description: +2% depth
                          items:
                            type: number
                            format: float
                          example: [141161.504702, 38.581398312538454]
                        sell:
                          type: array
                          description: -2% depth
                          items:
                            type: number
                            format: float
                          example: [145461.021768, 39.75651599669613]
                    high:
                      type: number
                      format: float
                      description: Highest 24h price in target currency
                      example: 0.000392979136931714
                    low:
                      type: number
                      format: float
                      description: Lowest 24h price in target currency
                      example: 0.000383640247389837
  /exchange/cg/trades:
    get:
      tags:
        - Exchange
      summary: Retrieve historical trades
      operationId: getCGTrades
      parameters:
        - name: ticker_id
          in: query
          required: true
          description: Unique identifier for the ticker
          schema:
            type: string
            example: "0xbea0000029ad1c77d3d5d23ba2d8893db9d1efab_0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
        - name: type
          in: query
          required: false
          description: Type of the trade (buy or sell). Defaults to both.
          schema:
            type: string
            example: "buy | sell"
        - name: limit
          in: query
          description: Limit the number of results returned. Defaults to 500.
          schema:
            type: integer
            example: 50
        - name: start_time
          in: query
          description: Start time for filtering trades. Defaults to end_time minus 7 days.
          schema:
            type: string
            format: date-time
            example: "2024-05-01T00:00:00.000Z"
        - name: end_time
          in: query
          description: End time for filtering trades. Defaults to today.
          schema:
            type: string
            format: date-time
            example: "2024-05-01T00:00:00.000Z"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  buy:
                    type: array
                    items:
                      $ref: "#/components/schemas/CGTrade"
                  sell:
                    type: array
                    items:
                      $ref: "#/components/schemas/CGTrade"
  /exchange/cmc/summary:
    get:
      tags:
        - Exchange
      summary: Retrieve summary of each trading pool
      operationId: getCMCSummary
      parameters:
        - $ref: "#/components/parameters/blockNumber"
        - $ref: "#/components/parameters/timestamp"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                description: A mapping of **ticker IDs** to their respective data.
                additionalProperties:
                  type: object
                  properties:
                    base_id:
                      type: string
                      description: Base currency contract address
                      example: "0xb170000aeefa790fa61d6e837d1035906839a3c8"
                    base_name:
                      type: string
                      description: Base currency name
                      example: "Pinto"
                    base_symbol:
                      type: string
                      description: Base currency symbol
                      example: "PINTO"
                    quote_id:
                      type: string
                      description: Quote currency contract address
                      example: "0xcbb7c0000ab88b473b1f5afd9ef808440eed33bf"
                    quote_name:
                      type: string
                      description: Quote currency name
                      example: "Coinbase Wrapped BTC"
                    quote_symbol:
                      type: string
                      description: Quote currency symbol
                      example: "cbBTC"
                    last_price:
                      type: number
                      format: float
                      description: Last recorded price in quote currency
                      example: 0.00000954380212086768
                    base_volume:
                      type: number
                      format: float
                      description: 24h volume of the base currency
                      example: 143796.863455
                    quote_volume:
                      type: number
                      format: float
                      description: 24h volume of the quote currency
                      example: 1.36190709
                    price_change_percent_24h:
                      type: number
                      format: float
                      description: 24h percent price change of the pair
                      example: 0.008573747096112947
                    highest_price_24h:
                      type: number
                      format: float
                      description: Highest 24h price in quote currency
                      example: 0.00000962205644818416
                    lowest_price_24h:
                      type: number
                      format: float
                      description: Lowest 24h price in quote currency
                      example: 0.000009344852387696
                    liquidity_in_usd:
                      type: integer
                      description: Liquidity in USD
                      example: 3567497
                    depth2:
                      type: object
                      description: Amount of tokens that can be bought or sold to move the price by 2% in either direction
                      properties:
                        buy:
                          type: array
                          description: +2% depth
                          items:
                            type: number
                            format: float
                          example: [17216.108664, 0.16837449]
                        sell:
                          type: array
                          description: -2% depth
                          items:
                            type: number
                            format: float
                          example: [19430.867069, 0.17350286]
                example:
                  "0xb170000aeefa790fa61d6e837d1035906839a3c8_0xcbb7c0000ab88b473b1f5afd9ef808440eed33bf":
                    base_id: "0xb170000aeefa790fa61d6e837d1035906839a3c8"
                    base_name: "Pinto"
                    base_symbol: "PINTO"
                    quote_id: "0xcbb7c0000ab88b473b1f5afd9ef808440eed33bf"
                    quote_name: "Coinbase Wrapped BTC"
                    quote_symbol: "cbBTC"
                    last_price: 0.00000954380212086768
                    base_volume: 143796.863455
                    quote_volume: 1.36190709
                    price_change_percent_24h: 0.008573747096112947
                    highest_price_24h: 0.00000962205644818416
                    lowest_price_24h: 0.000009344852387696
                    liquidity_in_usd: 3567497
                    depth2:
                      buy: [17216.108664, 0.16837449]
                      sell: [19430.867069, 0.17350286]
  /exchange/cmc/assets:
    get:
      tags:
        - Exchange
      summary: All assets in use by the exchange
      operationId: getCMCAssets
      description: Get a list of assets available on the exchange with their details.
      responses:
        '200':
          description: A list of exchange assets
          content:
            application/json:
              schema:
                type: object
                properties:
                  WETH:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Wrapped Ether
                      unified_cryptoasset_id:
                        type: string
                        example: "2396"
                      can_withdraw:
                        type: boolean
                        example: true
                      can_deposit:
                        type: boolean
                        example: true
                      maker_fee:
                        type: string
                        example: "0.00"
                      taker_fee:
                        type: string
                        example: "0.00"
                      contractAddressUrl:
                        type: string
                        example: "https://basescan.org/address/0x4200000000000000000000000000000000000006"
                      contractAddress:
                        type: string
                        example: "0x4200000000000000000000000000000000000006"
  /exchange/cmc/ticker:
    get:
      tags:
        - Exchange
      summary: Retrieve tickers and 24h stats
      operationId: getCMCTickers
      parameters:
        - $ref: "#/components/parameters/blockNumber"
        - $ref: "#/components/parameters/timestamp"
      responses:
        '200':
          description: Tickers and 24h stats
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    base_id:
                      type: string
                      description: The UCID of the base asset.
                    quote_id:
                      type: string
                      description: The UCID of the quote asset.
                    last_price:
                      type: number
                      format: double
                      description: The last transacted price of base currency in quote currency
                      example: 0.00000954380212086768
                    quote_volume:
                      type: number
                      format: double
                      description: 24h trading volume in quote currency
                      example: 1.36190709
                    base_volume:
                      type: number
                      format: double
                      description: 24h trading volume in base currency
                      example: 143796.863455
                    isFrozen:
                      type: string
                      description: Indicates if trading is frozen (1 for frozen, 0 for active).
                      example: "0"
                example:
                  "PINTO_WETH":
                    base_id: "0"
                    quote_id: "2396"
                    last_price: 0.0003029554482734783
                    quote_volume: 35.251839798667596
                    base_volume: 118291.418697
                    isFrozen: "0"
  /exchange/cmc/trades/market_pair:
    get:
      tags:
        - Exchange
      summary: Retrieve historical trades
      operationId: getCMCTrades
      parameters:
        - name: ticker_id
          in: query
          required: true
          description: Unique identifier for the ticker
          schema:
            type: string
            example: "0xbea0000029ad1c77d3d5d23ba2d8893db9d1efab_0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
        - name: type
          in: query
          required: false
          description: Type of the trade (buy or sell). Defaults to both.
          schema:
            type: string
            example: "buy | sell"
        - name: limit
          in: query
          description: Limit the number of results returned. Defaults to 500.
          schema:
            type: integer
            example: 50
        - name: start_time
          in: query
          description: Start time for filtering trades. Defaults to end_time minus 7 days.
          schema:
            type: string
            format: date-time
            example: "2024-05-01T00:00:00.000Z"
        - name: end_time
          in: query
          description: End time for filtering trades. Defaults to today.
          schema:
            type: string
            format: date-time
            example: "2024-05-01T00:00:00.000Z"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CMCTrade"
  /exchange/cmc/yields:
    get:
      tags:
        - Exchange
      summary: Retrieve current yield-bearing pools
      operationId: getCMCYields
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  provider:
                    type: string
                    description: Project name
                    example: "Pinto"
                  provider_logo:
                    type: string
                    format: uri
                    description: Project logo
                    example: "https://assets.pinto.money/tokens/PINTO_72x72.png"
                  provider_URL:
                    type: string
                    format: uri
                    description: Project URL
                    example: "https://pinto.money/"
                  links:
                    type: array
                    description: Project's social media info
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: Title
                          example: "Discord"
                        link:
                          type: string
                          format: uri
                          description: URL
                          example: "https://pinto.money/discord"
                  pools:
                    type: array
                    description: List of yield-bearing pools
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Pool name
                          example: "PINTO:WETH Constant Product 2 Upgradeable Well"
                        pair:
                          type: string
                          description: Trading pair
                          example: "PINTO-WETH"
                        pairLink:
                          type: string
                          format: uri
                          description: Pool URL
                          example: "https://pinto.exchange/#/wells/8453/0x3e11001cfbb6de5737327c59e10afab47b82b5d3"
                        logo:
                          type: string
                          format: uri
                          description: Pool Logo
                          example: "https://assets.pinto.money/tokens/PINTOWETH_72x72.png"
                        poolRewards:
                          type: array
                          description: List of reward tokens provided by the pool
                          items:
                            type: string
                            example: "PINTO"
                        apr:
                          type: number
                          format: float
                          description: Current vAPY of deposits in this pool
                          example: 0.19259258395698575
                        totalStaked:
                          type: number
                          format: float
                          description: Total USD liquidity in the pool
                          example: 1460662
  /silo/yield:
    post:
      tags:
        - Silo
      summary: Calculates and retrieves silo yields at a single season. Optional inputs allows refined control over the calculation.
      operationId: siloYield
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                season:
                  type: integer
                  description: Season number. Defaults to the current season.
                tokens:
                  type: array
                  items:
                    type: string
                  description: An array of EVM token addresses. Defaults to all whitelisted tokens
                emaWindows:
                  type: array
                  items:
                    type: integer
                  default: [24, 168, 720]
                  description: An array of EMA window sizes. Each is the number of seasons to use in the lookback. Defaults to 24h, 7d, and 30d windows.
                options:
                  type: object
                  properties:
                    initType:
                      type: string
                      enum: [NEW, AVERAGE]
                      description: Indicates whether to calculate from the basis of a new silo deposit, or the average silo deposit.
                      default: "AVERAGE"
                    initUserValues:
                      type: array
                      items:
                        type: object
                        properties:
                          stalkPerBdv:
                            type: number
                            description: "(user deposited stalk) / (user deposited bdv + user germinating bdv)"
                          germinating:
                            type: array
                            items:
                              type: number
                            description: "[Even, Odd] germinating stalk ratio of this deposit type. Each entry should be computed as: (user germinating stalk) / (user deposited bdv + user germinating bdv)"
                            default: [0, 0]
                        description: Each entry in the array corresponds to the requested token at the same index.
                      description: Initial values of a deposit starting state. Takes precedence over initType
                    ema:
                      type: array
                      items:
                        $ref: "#/components/schemas/EmaInfo"
                      description: Override values to use for the ema
                    catchUpRate:
                      type: number
                      description: Target number of hours for a deposit's grown stalk to catch up (for gauge only)
                      default: 4320
                    duration:
                      type: number
                      description: The duration for which to calculate the apy, in seasons
                      default: 8760
                    skipValidation:
                      type: boolean
                      description: Indicates whether any parameter validation should be skipped
                      default: false
                  description: Options that control the calculation itself
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                    description: Season number
                  yields:
                    type: object
                    additionalProperties:
                      type: object
                      description: Yields data for a window.
                      additionalProperties:
                        type: object
                        properties:
                          bean:
                            type: number
                            format: float
                            description: The annualized growth in bean count
                          stalk:
                            type: number
                            format: float
                            description: The annualized growth in stalk count
                          ownership:
                            type: number
                            format: float
                            description: The annualized growth in silo ownership percentage
                        description: Yields for each whitelisted token
                    description: Yields for each available ema window.
                    example:
                      "720":
                        "0xbea0005b8599265d41256905a9b3073d397812e4":
                          bean: 0
                          stalk: 1.749468280393595
                          ownership: 1.415032727943025
                  initType:
                    type: string
                    enum: [NEW, AVERAGE, CUSTOM]
                    description: The initType used in the calculation. Custom if initUserValues was used instead.
                  ema:
                    type: object
                    additionalProperties:
                      $ref: "#/components/schemas/EmaInfo"
                    description: EMA calculation details for each requested window.
                    example:
                      "720":
                        effectiveWindow: 350
                        beansPerSeason: "213456789"
                required:
                  - season
                  - yields
                  - initType
                  - ema
  /silo/yield-history:
    post:
      tags:
        - Silo
      summary: Retrieves silo yields already stored in the database.
      operationId: yieldHistory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  format: address
                  description: The whitelisted token address.
                  example: "0xabcd"
                emaWindow:
                  type: integer
                  enum: [24, 168, 720]
                  description: The EMA window size. Corresponds to a 24h, 7d, and 30d vAPY.
                initType:
                  type: string
                  enum: [NEW, AVERAGE]
                  description: Whether to retrieve yields calculated based on a new silo deposit or the average silo deposit.
                fromSeason:
                  type: integer
                  description: The earliest season to appear in the result. Guaranteed to be included if a result for it exists (regardless of interval)
                  example: 20000
                toSeason:
                  type: integer
                  description: The latest season to appear in the result. Guaranteed to be included if a result for it exists (regardless of interval)
                  example: 25000
                interval:
                  type: integer
                  description: Specifies a skip interval between seasons in the result. i.e. interval of 10 will return an entry for every 10 seasons in the response.
                  example: 0
              required:
                - token
                - emaWindow
                - initType
                - fromSeason
                - toSeason
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    bean:
                      type: number
                      format: float
                      description: The annualized growth in bean count
                    stalk:
                      type: number
                      format: float
                      description: The annualized growth in stalk count
                    ownership:
                      type: number
                      format: float
                      description: The annualized growth in silo ownership percentage
                  description: Yield breakdown for the season.
                description: Mapping of season numbers to their yield data.
              example:
                "10000":
                  bean: 0
                  stalk: 0.8661584416280589
                  ownership: 0.6056560518900254
                "10001":
                  bean: 0
                  stalk: 0.8642958966146155
                  ownership: 0.6044476224863509
                "10002":
                  bean: 0
                  stalk: 0.8642958966146155
                  ownership: 0.6044476224863509
  /silo/deposits:
    post:
      tags:
        - Silo
      summary: Retrieves detailed information about Deposits in the silo.
      operationId: siloDeposits
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: string
                  format: address
                  description: EVM address of a depositor. Default is all accounts
                  example: "0xabcd"
                token:
                  type: string
                  format: address
                  description: EVM address of a whitelisted token. Default is all tokens
                  example: "0xef01"
                sort:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [absolute, relative]
                      description: Absolute sorting will return the largest absolue differences, while relative will return largest relative differences. Absolute sorting will thus prefer larger farmers.
                    field:
                      type: string
                      enum: [bdv, stalk, seeds]
                      description: The field to sort by with the given strategy
                  description: Sorts the result based on the difference in actual values vs the would-be values upon a lambda convert.
                lambdaBdvChange:
                  type: string
                  enum: [increase, decrease]
                  description: Specifies whether to filter for would-be increasing or decreasing bdv upon a lambda convert. Default is to return both.
                limit:
                  type: integer
                  description: The maximum number of results to return.
                  default: 100
                skip:
                  type: integer
                  description: The number of results to skip (for pagination).
                  default: 0
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastUpdated:
                    type: integer
                    description: The last block number in which the list of deposits was updated and the lambda stats checked for large fluctuations.
                  deposits:
                    type: array
                    items:
                      type: object
                      properties:
                        chain:
                          type: string
                          description: The blockchain network (e.g., "arb" for Arbitrum).
                        account:
                          type: string
                          format: address
                          description: The depositor's EVM address.
                        token:
                          type: string
                          format: address
                          description: The deposited token's EVM address.
                        stem:
                          type: string
                          description: The stem associated with the deposit.
                        mowStem:
                          type: string
                          description: The stem in which this deposit was last mown.
                        depositedAmount:
                          type: string
                          description: The amount of tokens deposited.
                        depositedBdv:
                          type: string
                          description: The current recorded bdv of the deposited amount.
                        baseStalk:
                          type: string
                          description: The base stalk portion of the deposit's stalk.
                        grownStalk:
                          type: string
                          description: The grown stalk portion of the deposit's stalk
                        mowableStalk:
                          type: string
                          description: The amount of stalk that would be accrue to the deposit upon a mow.
                        currentStalk:
                          type: string
                          description: The current recorded stalk for this deposit.
                        currentSeeds:
                          type: string
                          description: The current recorded seeds for this deposit.
                        bdvOnLambda:
                          type: string
                          description: The bdv of this deposit if a lambda convert were to occur now.
                        stalkOnLambda:
                          type: string
                          description: The amount of stalk of this deposit if a lambda convert were to occur now. This includes the affect of a mow.
                        seedsOnLambda:
                          type: string
                          description: The amount of seeds of this deposit if a lambda convert were to occur now.
              example:
                lastUpdated: 267360284
                deposits:
                  - chain: "arb"
                    account: "0x3d138e67dfac9a7af69d2694470b0b6d37721b06"
                    token: "0xbea0005b8599265d41256905a9b3073d397812e4"
                    stem: "14945036521"
                    mowStem: "39978964924"
                    depositedAmount: "5489953983"
                    depositedBdv: "19685712512"
                    baseStalk: "196857125120000000000"
                    grownStalk: "492810717587449278336"
                    mowableStalk: "42783894565816732800"
                    currentStalk: "689667842707449278336"
                    currentSeeds: "123527216069999616"
                    bdvOnLambda: "5489953983"
                    stalkOnLambda: "204266232677503621224"
                    seedsOnLambda: "34449285564797544"
  /price:
    get:
      tags:
        - Price
      summary: Retrieve the current Bean price, liquidity, and deltaB
      operationId: price
      parameters:
        - $ref: "#/components/parameters/blockNumber"
        - $ref: "#/components/parameters/timestamp"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  block:
                    type: integer
                    description: On-chain EVM block number of the requested price data
                    example: 19804698
                  timestamp:
                    type: integer
                    description: Unix timestamp of the block, in seconds
                    example: 1714921799
                  token:
                    type: string
                    description: EVM address of the token
                    example: "0xbea0000029ad1c77d3d5d23ba2d8893db9d1efab"
                  usdPrice:
                    type: number
                    format: double
                    description: Current price of the token in USD
                    example: 0.9994
                  liquidityUSD:
                    type: number
                    format: double
                    description: Total liquidity in USD
                    example: 28235107.24
                  deltaB:
                    type: integer
                    description: Pinto Protocol deltaB
                    example: -4331
  /snapshot/voting-power:
    get:
      tags:
        - Snapshot
      summary: Retrieve the current Bean price, liquidity, and deltaB
      operationId: voting-power
      parameters:
        - name: addresses
          in: query
          required: true
          description: Comma-separated EVM addresses
          schema:
            type: string
            example: 0xabcd,0xef01
        - name: snapshot
          in: query
          required: true
          description: EVM block number used to compute voting power on the given addresses
          schema:
            type: integer
            example: 267347585
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  score:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          format: address
                          description: EVM address of the voter
                          example: "0xabcd"
                        score:
                          type: number
                          format: float
                          description: Voting power associated with this EVM address, including any delegated votes.
                          example: 1500.60
                        stalkholders:
                          type: object
                          additionalProperties:
                            type: number
                            format: float
                            example: 500.20
                          description: Mapping of EVM addresses and their voting power contributing to the primary address' vote.
                          example:
                            "0xabcd": 266.32
                            "0xcdef": 1234.28
  /tractor/orders:
    post:
      tags:
        - Tractor
      summary: Get tractor orders
      description: Returns all published tractor orders matching the requested criteria, including further information about known blueprints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderType:
                  type: string
                  description: Type of the tractor order
                  enum:
                    - SOW_V0
                    - KNOWN
                    - UNKNOWN
                blueprintHash:
                  type: string
                  description: Hash of the blueprint
                publisher:
                  type: string
                  description: Publisher of the order
                cancelled:
                  type: boolean
                  description: Filter by cancelled status
                publishedBetween:
                  type: array
                  description: Date range for when orders were published
                  items:
                    type: string
                    format: date-time
                  minItems: 2
                  maxItems: 2
                validBetween:
                  type: array
                  description: Date range for order validity
                  items:
                    type: string
                    format: date-time
                  minItems: 2
                  maxItems: 2
                blueprintParams:
                  type: object
                  description: Specialized parameters for blueprint-specific retrieval (requires orderType to be specified)
                limit:
                  type: number
                  description: Maximum number of orders to return
                skip:
                  type: number
                  description: Number of orders to skip (for pagination)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastUpdated:
                    type: integer
                    description: Timestamp of the last update
                  totalRecords:
                    type: integer
                    description: Total number of records matching the query
                  orders:
                    type: array
                    items:
                      type: object
                      properties:
                        blueprintHash:
                          type: string
                          description: Hash of the blueprint
                          example: "0xe9d5800f80c1f1fda3ad5f88d5cd49031fdd01b8b0fb8d71ea869ca6ab212953"
                        orderType:
                          type: string
                          description: Type of the order
                          example: "SOW_V0"
                        publisher:
                          type: string
                          description: Address of the publisher
                          example: "0x9726ec4759D6B61010Fd842C494995cFd5952795"
                        data:
                          type: string
                          description: Encoded order data
                        operatorPasteInstrs:
                          type: array
                          items:
                            type: string
                        maxNonce:
                          type: string
                          description: Maximum nonce value
                        startTime:
                          type: string
                          format: date-time
                          description: Order start time
                        endTime:
                          type: string
                          format: date-time
                          description: Order end time
                        signature:
                          type: string
                          description: Order signature
                        publishedTimestamp:
                          type: string
                          format: date-time
                          description: When the order was published
                        publishedBlock:
                          type: integer
                          description: Block number when published
                        beanTip:
                          type: string
                          description: Bean tip amount
                        cancelled:
                          type: boolean
                          description: Whether the order is cancelled
                        blueprintData:
                          type: object
                          properties:
                            blueprintHash:
                              type: string
                            pintoSownCounter:
                              type: string
                            lastExecutedSeason:
                              type: integer
                            orderComplete:
                              type: boolean
                            amountFunded:
                              type: string
                            cascadeAmountFunded:
                              type: string
                            sourceTokenIndices:
                              type: array
                              items:
                                type: string
                            totalAmountToSow:
                              type: string
                            minAmountToSowPerSeason:
                              type: string
                            maxAmountToSowPerSeason:
                              type: string
                            minTemp:
                              type: string
                            maxPodlineLength:
                              type: string
                            maxGrownStalkPerBdv:
                              type: string
                            runBlocksAfterSunrise:
                              type: string
                            slippageRatio:
                              type: string
                        executionStats:
                          type: object
                          properties:
                            executionCount:
                              type: integer
                              description: Number of times the order has been executed
                            latestExecution:
                              type: string
                              format: date-time
                              nullable: true
                              description: Timestamp of the latest execution
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
  /tractor/executions:
    post:
      tags:
        - Tractor
      summary: Get tractor executions
      description: Returns all tractor executions matching the requested criteria, including further information about known blueprints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderType:
                  type: string
                  enum: ['KNOWN', 'UNKNOWN']
                  description: Type of the tractor order
                blueprintHash:
                  type: string
                  description: Hash of the blueprint
                nonce:
                  type: number
                  description: Execution nonce
                publisher:
                  type: string
                  description: Publisher of the tractor execution
                operator:
                  type: string
                  description: Operator of the tractor execution
                limit:
                  type: number
                  description: Maximum number of results to return
                skip:
                  type: number
                  description: Number of results to skip (for pagination)
                executedBetween:
                  type: array
                  description: Date range for execution time filtering
                  items:
                    type: string
                    format: date-time
                  minItems: 2
                  maxItems: 2
                blueprintParams:
                  type: object
                  description: Additional parameters specific to the blueprint type. Requires orderType to be specified.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastUpdated:
                    type: integer
                    description: Block number of the last update
                  totalRecords:
                    type: integer
                    description: Total number of records matching the query
                  executions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        blueprintHash:
                          type: string
                        nonce:
                          type: string
                        operator:
                          type: string
                        gasCostUsd:
                          type: number
                          format: float
                        tipUsd:
                          type: number
                          format: float
                        executedTimestamp:
                          type: string
                          format: date-time
                        executedBlock:
                          type: integer
                        executedTxn:
                          type: string
                        orderInfo:
                          type: object
                          properties:
                            orderType:
                              type: string
                            publisher:
                              type: string
                        blueprintData:
                          type: object
                          properties:
                            id:
                              type: integer
                            blueprintHash:
                              type: string
                            index:
                              type: string
                            beans:
                              type: string
                            pods:
                              type: string
                            placeInLine:
                              type: string
                            usedTokens:
                              type: array
                              items:
                                type: string
                            usedGrownStalkPerBdv:
                              type: number
                              format: float
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid orderType provided."
components:
  parameters:
    blockNumber:
      name: blockNumber
      in: query
      required: false
      description: EVM block number. Defaults to the latest block.
      schema:
        type: integer
        example: 19000000
    timestamp:
      name: timestamp
      in: query
      required: false
      description: Unix timestamp, in seconds or milliseconds. Default behavior is to use blockNumber instead.
      schema:
        type: integer
        example: 1715204400
  schemas:
    CGTrade:
      type: object
      properties:
        trade_id:
          type: integer
          format: int64
          example: 198245000283
        price:
          type: number
          format: float
          example: 0.000318525481173441
        base_volume:
          type: number
          format: float
          example: 122.35605
        target_volume:
          type: number
          format: float
          example: 0.03897351970073168
        trade_timestamp:
          type: integer
          format: int64
          description: Unix timestamp of the trade, in milliseconds
          example: 1715161115000
        type:
          type: string
          example: "buy | sell"
    CMCTrade:
      type: object
      properties:
        trade_id:
          type: integer
          format: int64
          example: 198245000283
        price:
          type: number
          format: float
          example: 0.000318525481173441
        base_volume:
          type: number
          format: float
          example: 122.35605
        quote_volume:
          type: number
          format: float
          example: 0.03897351970073168
        timestamp:
          type: integer
          format: int64
          description: Unix timestamp of the trade, in milliseconds
          example: 1715161115000
        type:
          type: string
          example: "buy | sell"
    EmaInfo:
      type: object
      properties:
        effectiveWindow:
          type: integer
          description: The effective window used for the EMA. This is relevant if fewer datapoints were available than requested.
        beansPerSeason:
          type: string
          description: The number of seasonal reward beans as a BigInt string
          example: "213456789"
