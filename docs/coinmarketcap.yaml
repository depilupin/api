openapi: 3.0.0
info:
  title: Pinto Exchange API
  version: 1.0.0
  description: >
    REST API for CoinMarketCap <> Pinto Exchange.


    - [Full API docs](https://api.pinto.money/docs/#/)


    - [Exchange subgraph](https://graph.pinto.money/explorer/exchange)
servers:
  - url: "https://api.pinto.money"

tags:
  - name: Exchange

paths:
  /exchange/cmc/summary:
    get:
      tags:
        - Exchange
      summary: Retrieve summary of each trading pool
      operationId: getCMCSummary
      parameters:
        - $ref: "#/components/parameters/blockNumber"
        - $ref: "#/components/parameters/timestamp"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                description: A mapping of **ticker IDs** to their respective data.
                additionalProperties:
                  type: object
                  properties:
                    base_id:
                      type: string
                      description: Base currency contract address
                      example: "0xb170000aeefa790fa61d6e837d1035906839a3c8"
                    base_name:
                      type: string
                      description: Base currency name
                      example: "Pinto"
                    base_symbol:
                      type: string
                      description: Base currency symbol
                      example: "PINTO"
                    quote_id:
                      type: string
                      description: Quote currency contract address
                      example: "0xcbb7c0000ab88b473b1f5afd9ef808440eed33bf"
                    quote_name:
                      type: string
                      description: Quote currency name
                      example: "Coinbase Wrapped BTC"
                    quote_symbol:
                      type: string
                      description: Quote currency symbol
                      example: "cbBTC"
                    last_price:
                      type: number
                      format: float
                      description: Last recorded price in quote currency
                      example: 0.00000954380212086768
                    base_volume:
                      type: number
                      format: float
                      description: 24h volume of the base currency
                      example: 143796.863455
                    quote_volume:
                      type: number
                      format: float
                      description: 24h volume of the quote currency
                      example: 1.36190709
                    price_change_percent_24h:
                      type: number
                      format: float
                      description: 24h percent price change of the pair
                      example: 0.008573747096112947
                    highest_price_24h:
                      type: number
                      format: float
                      description: Highest 24h price in quote currency
                      example: 0.00000962205644818416
                    lowest_price_24h:
                      type: number
                      format: float
                      description: Lowest 24h price in quote currency
                      example: 0.000009344852387696
                    liquidity_in_usd:
                      type: integer
                      description: Liquidity in USD
                      example: 3567497
                    depth2:
                      type: object
                      description: Amount of tokens that can be bought or sold to move the price by 2% in either direction
                      properties:
                        buy:
                          type: array
                          description: +2% depth
                          items:
                            type: number
                            format: float
                          example: [17216.108664, 0.16837449]
                        sell:
                          type: array
                          description: -2% depth
                          items:
                            type: number
                            format: float
                          example: [19430.867069, 0.17350286]
                example:
                  "0xb170000aeefa790fa61d6e837d1035906839a3c8_0xcbb7c0000ab88b473b1f5afd9ef808440eed33bf":
                    base_id: "0xb170000aeefa790fa61d6e837d1035906839a3c8"
                    base_name: "Pinto"
                    base_symbol: "PINTO"
                    quote_id: "0xcbb7c0000ab88b473b1f5afd9ef808440eed33bf"
                    quote_name: "Coinbase Wrapped BTC"
                    quote_symbol: "cbBTC"
                    last_price: 0.00000954380212086768
                    base_volume: 143796.863455
                    quote_volume: 1.36190709
                    price_change_percent_24h: 0.008573747096112947
                    highest_price_24h: 0.00000962205644818416
                    lowest_price_24h: 0.000009344852387696
                    liquidity_in_usd: 3567497
                    depth2:
                      buy: [17216.108664, 0.16837449]
                      sell: [19430.867069, 0.17350286]
  /exchange/cmc/assets:
    get:
      tags:
        - Exchange
      summary: All assets in use by the exchange
      operationId: getCMCAssets
      description: Get a list of assets available on the exchange with their details.
      responses:
        '200':
          description: A list of exchange assets
          content:
            application/json:
              schema:
                type: object
                properties:
                  WETH:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Wrapped Ether
                      unified_cryptoasset_id:
                        type: string
                        example: "2396"
                      can_withdraw:
                        type: boolean
                        example: true
                      can_deposit:
                        type: boolean
                        example: true
                      maker_fee:
                        type: string
                        example: "0.00"
                      taker_fee:
                        type: string
                        example: "0.00"
                      contractAddressUrl:
                        type: string
                        example: "https://basescan.org/address/0x4200000000000000000000000000000000000006"
                      contractAddress:
                        type: string
                        example: "0x4200000000000000000000000000000000000006"
  /exchange/cmc/ticker:
    get:
      tags:
        - Exchange
      summary: Retrieve tickers and 24h stats
      operationId: getCMCTickers
      parameters:
        - $ref: "#/components/parameters/blockNumber"
        - $ref: "#/components/parameters/timestamp"
      responses:
        '200':
          description: Tickers and 24h stats
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    base_id:
                      type: string
                      description: The UCID of the base asset.
                    quote_id:
                      type: string
                      description: The UCID of the quote asset.
                    last_price:
                      type: number
                      format: double
                      description: The last transacted price of base currency in quote currency
                      example: 0.00000954380212086768
                    quote_volume:
                      type: number
                      format: double
                      description: 24h trading volume in quote currency
                      example: 1.36190709
                    base_volume:
                      type: number
                      format: double
                      description: 24h trading volume in base currency
                      example: 143796.863455
                    isFrozen:
                      type: string
                      description: Indicates if trading is frozen (1 for frozen, 0 for active).
                      example: "0"
                example:
                  "PINTO_WETH":
                    base_id: "0"
                    quote_id: "2396"
                    last_price: 0.0003029554482734783
                    quote_volume: 35.251839798667596
                    base_volume: 118291.418697
                    isFrozen: "0"
  /exchange/cmc/trades/market_pair:
    get:
      tags:
        - Exchange
      summary: Retrieve historical trades
      operationId: getCMCTrades
      parameters:
        - name: ticker_id
          in: query
          required: true
          description: Unique identifier for the ticker
          schema:
            type: string
            example: "0xbea0000029ad1c77d3d5d23ba2d8893db9d1efab_0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
        - name: type
          in: query
          required: false
          description: Type of the trade (buy or sell). Defaults to both.
          schema:
            type: string
            example: "buy | sell"
        - name: limit
          in: query
          description: Limit the number of results returned. Defaults to 500.
          schema:
            type: integer
            example: 50
        - name: start_time
          in: query
          description: Start time for filtering trades. Defaults to end_time minus 7 days.
          schema:
            type: string
            format: date-time
            example: "2024-05-01T00:00:00.000Z"
        - name: end_time
          in: query
          description: End time for filtering trades. Defaults to today.
          schema:
            type: string
            format: date-time
            example: "2024-05-01T00:00:00.000Z"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CMCTrade"
  /exchange/cmc/yields:
    get:
      tags:
        - Exchange
      summary: Retrieve current yield-bearing pools
      operationId: getCMCYields
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  provider:
                    type: string
                    description: Project name
                    example: "Pinto"
                  provider_logo:
                    type: string
                    format: uri
                    description: Project logo
                    example: "https://assets.pinto.money/tokens/PINTO_72x72.png"
                  provider_URL:
                    type: string
                    format: uri
                    description: Project URL
                    example: "https://pinto.money/"
                  links:
                    type: array
                    description: Project's social media info
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: Title
                          example: "Discord"
                        link:
                          type: string
                          format: uri
                          description: URL
                          example: "https://pinto.money/discord"
                  pools:
                    type: array
                    description: List of yield-bearing pools
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Pool name
                          example: "PINTO:WETH Constant Product 2 Upgradeable Well"
                        pair:
                          type: string
                          description: Trading pair
                          example: "PINTO-WETH"
                        pairLink:
                          type: string
                          format: uri
                          description: Pool URL
                          example: "https://pinto.exchange/#/wells/8453/0x3e11001cfbb6de5737327c59e10afab47b82b5d3"
                        logo:
                          type: string
                          format: uri
                          description: Pool Logo
                          example: "https://assets.pinto.money/tokens/PINTOWETH_72x72.png"
                        poolRewards:
                          type: array
                          description: List of reward tokens provided by the pool
                          items:
                            type: string
                            example: "PINTO"
                        apr:
                          type: number
                          format: float
                          description: Current vAPY of deposits in this pool
                          example: 0.19259258395698575
                        totalStaked:
                          type: number
                          format: float
                          description: Total USD liquidity in the pool
                          example: 1460662
  https://graph.pinto.money/exchange:
    post:
      tags:
        - Exchange
      summary: Exchange Subgraph - Trades
      operationId: exchangeSubgraph
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  example: See schema description
                  description: |
                    Example GraphQL query:
                    ```graphql
                    query GetTrades($tradeType: TradeType!) {
                      trades(where: { tradeType: $tradeType }) {
                        id
                        swapAmountIn
                        swapAmountOut
                        tradeVolumeUSD
                        timestamp
                        well {
                          id
                        }
                        swapFromToken {
                          id
                          decimals
                          symbol
                        }
                        swapToToken {
                          id
                          decimals
                          symbol
                        }
                      }
                    }```
                variables:
                  type: object
                  properties:
                    tradeType:
                      type: string
                      example: "SWAP"
      responses:
        "200":
          description: Successful response containing trade data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      trades:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: "SWAP-0x000028704a651439e067ff40dbe9baf09654641ec68d878538ef7681685d3492-0x3e11001cfbb6de5737327c59e10afab47b82b5d3-200137434751662853"
                            swapAmountIn:
                              type: string
                              example: "745687343"
                            swapAmountOut:
                              type: string
                              example: "200137434751662853"
                            tradeVolumeUSD:
                              type: string
                              example: "739.47"
                            timestamp:
                              type: string
                              example: "1734554573"
                            well:
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: "0x3e11001cfbb6de5737327c59e10afab47b82b5d3"
                            swapFromToken:
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: "0xb170000aeefa790fa61d6e837d1035906839a3c8"
                                decimals:
                                  type: integer
                                  example: 6
                                symbol:
                                  type: string
                                  example: "PINTO"
                            swapToToken:
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: "0x4200000000000000000000000000000000000006"
                                decimals:
                                  type: integer
                                  example: 18
                                symbol:
                                  type: string
                                  example: "WETH"
components:
  parameters:
    blockNumber:
      name: blockNumber
      in: query
      required: false
      description: EVM block number. Defaults to the latest block.
      schema:
        type: integer
        example: 19000000
    timestamp:
      name: timestamp
      in: query
      required: false
      description: Unix timestamp, in seconds or milliseconds. Default behavior is to use blockNumber instead.
      schema:
        type: integer
        example: 1715204400
  schemas:
    CMCTrade:
      type: object
      properties:
        trade_id:
          type: integer
          format: int64
          example: 198245000283
        price:
          type: number
          format: float
          example: 0.000318525481173441
        base_volume:
          type: number
          format: float
          example: 122.35605
        quote_volume:
          type: number
          format: float
          example: 0.03897351970073168
        timestamp:
          type: integer
          format: int64
          description: Unix timestamp of the trade, in milliseconds
          example: 1715161115000
        type:
          type: string
          example: "buy | sell"
